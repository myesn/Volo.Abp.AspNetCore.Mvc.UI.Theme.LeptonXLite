@using System.Globalization
@using Microsoft.AspNetCore.Http.Extensions
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.Languages

@model ThemeLanguageInfo

@if (Model.HasLanguages)
{
	var returnUrl = System.Net.WebUtility.UrlEncode(Context.Request.GetEncodedPathAndQuery());

	<div class="lpx-language-selection btn-toggle lpx-toggle" role="button" data-lpx-toggle="mobile-language">
		<i class="lpx-icon bi bi-globe" aria-hidden="true"></i>
		<span id="lang">@(new CultureInfo(Model.CurrentLanguage.CultureName).TwoLetterISOLanguageName.ToUpperInvariant())</span>
	</div>

	<div class="action-group-menu d-none" id="mobile-language">

		@foreach (var language in Model.Languages)
		{
			var twoLetterLanguageName = new CultureInfo(language.CultureName).TwoLetterISOLanguageName.ToUpperInvariant();

			<a href="~/Abp/Languages/Switch?culture=@language.CultureName&uiCulture=@language.UiCultureName&returnUrl=@returnUrl" class="action" role="button"> @language.DisplayName / @twoLetterLanguageName </a>
		}

	</div>
}
