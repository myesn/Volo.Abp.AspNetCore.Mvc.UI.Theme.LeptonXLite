@using System.Globalization
@using Microsoft.AspNetCore.Http.Extensions
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.LeptonXLite.Languages

@model ThemeLanguageInfo
@{
	var returnUrl = System.Net.WebUtility.UrlEncode(Context.Request.GetEncodedPathAndQuery());
}

@if (Model.HasLanguages)
{
	<div class="lpx-language-selection dropdown" data-lpx-language-selection="something">
		<div class="dropdown-toggle"
		 role="button"
		 id="languageDropdown"
		 data-bs-toggle="dropdown"
		 aria-expanded="false">
			<i class="lpx-icon bi bi-globe"></i>
			<span>@(new CultureInfo(Model.CurrentLanguage.CultureName).TwoLetterISOLanguageName.ToUpperInvariant())</span>
		</div>
		<div class="dropdown-menu" aria-labelledby="languageDropdown">
			@foreach (var language in Model.Languages)
			{
				var twoLetterLanguageName = new CultureInfo(language.CultureName).TwoLetterISOLanguageName.ToUpperInvariant();

				<a href="~/Abp/Languages/Switch?culture=@language.CultureName&uiCulture=@language.UiCultureName&returnUrl=@returnUrl"
				class="dropdown-item"
				data-lpx-language-option="@twoLetterLanguageName">@language.DisplayName / @twoLetterLanguageName</a>
			}
		</div>
	</div>
}
